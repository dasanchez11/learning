{"ast":null,"code":"var _jsxFileName = \"/Users/diegosanchez/Documents/Web Development/context-and-hooks/Context/src/Context/ThemeContext/AuthContext.js\";\nimport React, { createContext, Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nclass AuthContextProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isAuthenticated: false\n    };\n\n    this.toggleAuth = () => {\n      this.setState({\n        isAuthenticated: !this.state.isAuthenticated\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: { ...this.state,\n        toggleAuth: this.toggleAuth\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/diegosanchez/Documents/Web Development/context-and-hooks/Context/src/Context/ThemeContext/AuthContext.js"],"names":["React","createContext","Component","AuthContext","AuthContextProvider","state","isAuthenticated","toggleAuth","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,SAA5B,QAA4C,OAA5C;;AAGA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEP,MAAMG,mBAAN,SAAkCF,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCG,KADwC,GAChC;AACJC,MAAAA,eAAe,EAAE;AADb,KADgC;;AAAA,SAKxCC,UALwC,GAK3B,MAAK;AACd,WAAKC,QAAL,CAAc;AAACF,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA9B,OAAd;AACH,KAPuC;AAAA;;AASxCG,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKJ,KAAT;AAAgBE,QAAAA,UAAU,EAAC,KAAKA;AAAhC,OAA7B;AAAA,gBACK,KAAKG,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhBuC;;AAmB5C,eAAeP,mBAAf","sourcesContent":["import React,{createContext,Component} from \"react\";\n\n\nexport const AuthContext = createContext();\n\nclass AuthContextProvider extends Component {\n    state = {\n        isAuthenticated: false\n    }\n\n    toggleAuth = () =>{\n        this.setState({isAuthenticated: !this.state.isAuthenticated})\n    }\n\n    render() { \n        return ( \n            <AuthContext.Provider value={{...this.state, toggleAuth:this.toggleAuth}}>\n                {this.props.children}\n\n            </AuthContext.Provider>\n         );\n    }\n}\n \nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}